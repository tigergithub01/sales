<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sales.dao.business.DrpMaterialMapper">
  <resultMap id="BaseResultMap" type="com.sales.model.business.DrpMaterial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    
    	<!-- // 主键 -->
    	<id column="id" property="id" />
    	<!-- // 商品编码 -->
		<result column="code" property="code" />
    	<!-- // 商品主条码 -->
		<result column="barcode" property="barcode" />
    	<!-- // 商品名称 -->
		<result column="name" property="name" />
    	<!-- // 助记码 -->
		<result column="pinyin" property="pinyin" />
    	<!-- // 商品型号 -->
		<result column="model" property="model" />
    	<!-- // 商品规格 -->
		<result column="spec" property="spec" />
    	<!-- // 计量单位 -->
		<result column="unit_id" property="unitId" />
    	<!-- // 商品分类 -->
		<result column="type_id" property="typeId" />
    	<!-- // 品牌类型（备用） -->
		<result column="brand_id" property="brandId" />
    	<!-- // 批发价（备用） -->
		<result column="sale_price" property="salePrice" />
    	<!-- // 进货价(成本价) -->
		<result column="in_price" property="inPrice" />
    	<!-- // 零售价 -->
		<result column="retail_price" property="retailPrice" />
    	<!-- // 会员价（备用） -->
		<result column="vip_price" property="vipPrice" />
    	<!-- // 配送价 -->
		<result column="delivery_price" property="deliveryPrice" />
    	<!-- // 进价税率（备用） -->
		<result column="in_tax_rate" property="inTaxRate" />
    	<!-- // 销价税率（备用） -->
		<result column="sale_tax_rate" property="saleTaxRate" />
    	<!-- // 安全库存 -->
		<result column="safety_quantity" property="safetyQuantity" />
    	<!-- // 描述 -->
		<result column="description" property="description" />
    	<!-- // 成本计算方式：加权平均法,   移动加权平均法,   先进先出法,   分批认定法 -->
		<result column="cost_type" property="costType" />
    	<!-- // 主供应商 -->
		<result column="supplier_id" property="supplierId" />
    	<!-- // 是否可以销售？1：是；0：否 -->
		<result column="is_on_sale" property="isOnSale" />
    	<!-- // 是否可以赠送（无偿赠送=可以赠送+不可以前台销售，无偿赠送需要配合is_on_sale字段一起使用） -->
		<result column="is_gift" property="isGift" />
    	<!-- // 是否批次管理?1,是:0,否 -->
		<result column="batch_flag" property="batchFlag" />
    	<!-- // 保质期(天) -->
		<result column="guarantee_days" property="guaranteeDays" />
    	<!-- // 记录创建人 -->
		<result column="create_user_id" property="createUserId" />
    	<!-- // 记录创建时间 -->
		<result column="create_date" property="createDate" />
    	<!-- // 记录最后一次更新人 -->
		<result column="update_user_id" property="updateUserId" />
    	<!-- // 记录最后一次更新时间 -->
		<result column="update_date" property="updateDate" />
    	<!-- // 创建门店（门店添加的商品需要在商品名称前加“* ”号） -->
		<result column="organization_id" property="organizationId" />
    	<!-- // 购买此商品是否参与积分 -->
		<result column="is_integral" property="isIntegral" />
    	<!-- // 消费多少元赠送消费积分数1分（可以在系统配置设定预定义值） -->
		<result column="give_integral_rate" property="giveIntegralRate" />
    	<!-- // 赠送等级积分数（收银系统中此字段待用） -->
		<result column="rank_integral" property="rankIntegral" />
    	<!-- // 赠送消费积分数（收银系统中此字段待用） -->
		<result column="resume_integral" property="resumeIntegral" />
    	<!-- // 可使用积分购买金额（收银系统中此字段待用） -->
		<result column="integral_amount" property="integralAmount" />
    	<!-- // 会员价二 -->
		<result column="vip_price2" property="vipPrice2" />
    	<!-- // 会员价三 -->
		<result column="vip_price3" property="vipPrice3" />
    	<!-- // 会员价四 -->
		<result column="vip_price4" property="vipPrice4" />
    	<!-- // 会员价五 -->
		<result column="vip_price5" property="vipPrice5" />
    	<!-- // 门店销售授权类型：全部门店，仅授权门店 -->
		<result column="auth_type" property="authType" />
    	<!-- // 申请意见 -->
		<result column="apply_desc" property="applyDesc" />
    	<!-- // 审核状态：草稿，待审核，已审核 -->
		<result column="audit_status" property="auditStatus" />
    	<!-- // 审核时间 -->
		<result column="audit_date" property="auditDate" />
    	<!-- // 审核人 -->
		<result column="audit_user_id" property="auditUserId" />
    	<!-- // 审核意见 -->
		<result column="audit_desc" property="auditDesc" />
    
    <association property="unitIdRef" javaType="com.sales.model.business.SysUnit">
    	<id column="unit_id" property="id"/>
    	<result column="unitIdRef_id" property="id" />
    	<result column="unitIdRef_name" property="name" />
    </association>
    
    <association property="typeIdRef" javaType="com.sales.model.business.DrpMatType">
    	<id column="type_id" property="id"/>
    	<result column="typeIdRef_id" property="id" />
    	<result column="typeIdRef_name" property="name" />
    </association>
    
    <association property="brandIdRef" javaType="com.sales.model.business.DrpBrand">
    	<id column="brand_id" property="id"/>
    	<result column="brandIdRef_id" property="id" />
    	<result column="brandIdRef_name" property="name" />
    </association>
    
    <association property="costTypeRef" javaType="com.sales.model.business.SysParameter">
    	<id column="cost_type" property="id"/>
    	<result column="costTypeRef_id" property="id" />
    	<result column="costTypeRef_param_val" property="paramVal" />
    </association>
    
    <association property="supplierIdRef" javaType="com.sales.model.business.DrpSupplier">
    	<id column="supplier_id" property="id"/>
    	<result column="supplierIdRef_id" property="id" />
    	<result column="supplierIdRef_name" property="name" />
    </association>
    
    <association property="isOnSaleRef" javaType="com.sales.model.business.SysParameter">
    	<id column="is_on_sale" property="id"/>
    	<result column="isOnSaleRef_id" property="id" />
    	<result column="isOnSaleRef_param_val" property="paramVal" />
    </association>
    
    <association property="isGiftRef" javaType="com.sales.model.business.SysParameter">
    	<id column="is_gift" property="id"/>
    	<result column="isGiftRef_id" property="id" />
    	<result column="isGiftRef_param_val" property="paramVal" />
    </association>
    
    <association property="batchFlagRef" javaType="com.sales.model.business.SysParameter">
    	<id column="batch_flag" property="id"/>
    	<result column="batchFlagRef_id" property="id" />
    	<result column="batchFlagRef_param_val" property="paramVal" />
    </association>
    
    <association property="createUserIdRef" javaType="com.sales.model.business.SysUser">
    	<id column="create_user_id" property="id"/>
    	<result column="createUserIdRef_id" property="id" />
    	<result column="createUserIdRef_user_name" property="userName" />
    </association>
    
    <association property="updateUserIdRef" javaType="com.sales.model.business.SysUser">
    	<id column="update_user_id" property="id"/>
    	<result column="updateUserIdRef_id" property="id" />
    	<result column="updateUserIdRef_user_name" property="userName" />
    </association>
    
    <association property="authTypeRef" javaType="com.sales.model.business.SysParameter">
    	<id column="auth_type" property="id"/>
    	<result column="authTypeRef_id" property="id" />
    	<result column="authTypeRef_param_val" property="paramVal" />
    </association>
    
    <association property="auditStatusRef" javaType="com.sales.model.business.SysParameter">
    	<id column="audit_status" property="id"/>
    	<result column="auditStatusRef_id" property="id" />
    	<result column="auditStatusRef_param_val" property="paramVal" />
    </association>
    
    <association property="auditUserIdRef" javaType="com.sales.model.business.SysUser">
    	<id column="audit_user_id" property="id"/>
    	<result column="auditUserIdRef_id" property="id" />
    	<result column="auditUserIdRef_user_name" property="userName" />
    </association>
    
    
  </resultMap>
  
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    
    	o.id, 
    	o.code, 
    	o.barcode, 
    	o.name, 
    	o.pinyin, 
    	o.model, 
    	o.spec, 
    	unitIdRef.id AS unitIdRef_id, 
		unitIdRef.name as unitIdRef_name,
    	o.unit_id, 
    	typeIdRef.id AS typeIdRef_id, 
		typeIdRef.name as typeIdRef_name,
    	o.type_id, 
    	brandIdRef.id AS brandIdRef_id, 
		brandIdRef.name as brandIdRef_name,
    	o.brand_id, 
    	o.sale_price, 
    	o.in_price, 
    	o.retail_price, 
    	o.vip_price, 
    	o.delivery_price, 
    	o.in_tax_rate, 
    	o.sale_tax_rate, 
    	o.safety_quantity, 
    	o.description, 
    	costTypeRef.id AS costTypeRef_id, 
		costTypeRef.param_val as costTypeRef_param_val,
    	o.cost_type, 
    	supplierIdRef.id AS supplierIdRef_id, 
		supplierIdRef.name as supplierIdRef_name,
    	o.supplier_id, 
    	isOnSaleRef.id AS isOnSaleRef_id, 
		isOnSaleRef.param_val as isOnSaleRef_param_val,
    	o.is_on_sale, 
    	isGiftRef.id AS isGiftRef_id, 
		isGiftRef.param_val as isGiftRef_param_val,
    	o.is_gift, 
    	batchFlagRef.id AS batchFlagRef_id, 
		batchFlagRef.param_val as batchFlagRef_param_val,
    	o.batch_flag, 
    	o.guarantee_days, 
    	createUserIdRef.id AS createUserIdRef_id, 
		createUserIdRef.user_name as createUserIdRef_user_name,
    	o.create_user_id, 
    	o.create_date, 
    	updateUserIdRef.id AS updateUserIdRef_id, 
		updateUserIdRef.user_name as updateUserIdRef_user_name,
    	o.update_user_id, 
    	o.update_date, 
    	o.organization_id, 
    	o.is_integral, 
    	o.give_integral_rate, 
    	o.rank_integral, 
    	o.resume_integral, 
    	o.integral_amount, 
    	o.vip_price2, 
    	o.vip_price3, 
    	o.vip_price4, 
    	o.vip_price5, 
    	authTypeRef.id AS authTypeRef_id, 
		authTypeRef.param_val as authTypeRef_param_val,
    	o.auth_type, 
    	o.apply_desc, 
    	auditStatusRef.id AS auditStatusRef_id, 
		auditStatusRef.param_val as auditStatusRef_param_val,
    	o.audit_status, 
    	o.audit_date, 
    	auditUserIdRef.id AS auditUserIdRef_id, 
		auditUserIdRef.user_name as auditUserIdRef_user_name,
    	o.audit_user_id, 
    	o.audit_desc
	
  </sql>
  
  <sql id="Base_From_Tbl">
  	from t_drp_material o
	    LEFT JOIN t_sys_unit unitIdRef ON (o.unit_id = unitIdRef.id)
	    LEFT JOIN t_drp_mat_type typeIdRef ON (o.type_id = typeIdRef.id)
	    LEFT JOIN t_drp_brand brandIdRef ON (o.brand_id = brandIdRef.id)
	    LEFT JOIN t_sys_parameter costTypeRef ON (o.cost_type = costTypeRef.id)
	    LEFT JOIN t_drp_supplier supplierIdRef ON (o.supplier_id = supplierIdRef.id)
	    LEFT JOIN t_sys_parameter isOnSaleRef ON (o.is_on_sale = isOnSaleRef.id)
	    LEFT JOIN t_sys_parameter isGiftRef ON (o.is_gift = isGiftRef.id)
	    LEFT JOIN t_sys_parameter batchFlagRef ON (o.batch_flag = batchFlagRef.id)
	    LEFT JOIN t_sys_user createUserIdRef ON (o.create_user_id = createUserIdRef.id)
	    LEFT JOIN t_sys_user updateUserIdRef ON (o.update_user_id = updateUserIdRef.id)
	    LEFT JOIN t_sys_parameter authTypeRef ON (o.auth_type = authTypeRef.id)
	    LEFT JOIN t_sys_parameter auditStatusRef ON (o.audit_status = auditStatusRef.id)
	    LEFT JOIN t_sys_user auditUserIdRef ON (o.audit_user_id = auditUserIdRef.id)
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    <include refid="Base_From_Tbl" />
    where o.id = #{id}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_drp_material
    where id = #{id}
  </delete>
  
  <insert id="insert" parameterType="com.sales.model.business.DrpMaterial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_drp_material (
      id, 
      code, 
      barcode, 
      name, 
      pinyin, 
      model, 
      spec, 
      unit_id, 
      type_id, 
      brand_id, 
      sale_price, 
      in_price, 
      retail_price, 
      vip_price, 
      delivery_price, 
      in_tax_rate, 
      sale_tax_rate, 
      safety_quantity, 
      description, 
      cost_type, 
      supplier_id, 
      is_on_sale, 
      is_gift, 
      batch_flag, 
      guarantee_days, 
      create_user_id, 
      create_date, 
      update_user_id, 
      update_date, 
      organization_id, 
      is_integral, 
      give_integral_rate, 
      rank_integral, 
      resume_integral, 
      integral_amount, 
      vip_price2, 
      vip_price3, 
      vip_price4, 
      vip_price5, 
      auth_type, 
      apply_desc, 
      audit_status, 
      audit_date, 
      audit_user_id, 
      audit_desc
      )
    values (
      #{id}, 
      #{code}, 
      #{barcode}, 
      #{name}, 
      #{pinyin}, 
      #{model}, 
      #{spec}, 
      #{unitId}, 
      #{typeId}, 
      #{brandId}, 
      #{salePrice}, 
      #{inPrice}, 
      #{retailPrice}, 
      #{vipPrice}, 
      #{deliveryPrice}, 
      #{inTaxRate}, 
      #{saleTaxRate}, 
      #{safetyQuantity}, 
      #{description}, 
      #{costType}, 
      #{supplierId}, 
      #{isOnSale}, 
      #{isGift}, 
      #{batchFlag}, 
      #{guaranteeDays}, 
      #{createUserId}, 
      #{createDate}, 
      #{updateUserId}, 
      #{updateDate}, 
      #{organizationId}, 
      #{isIntegral}, 
      #{giveIntegralRate}, 
      #{rankIntegral}, 
      #{resumeIntegral}, 
      #{integralAmount}, 
      #{vipPrice2}, 
      #{vipPrice3}, 
      #{vipPrice4}, 
      #{vipPrice5}, 
      #{authType}, 
      #{applyDesc}, 
      #{auditStatus}, 
      #{auditDate}, 
      #{auditUserId}, 
      #{auditDesc}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.sales.model.business.DrpMaterial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_drp_material
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="code != null">
        code,
      </if>
      <if test="barcode != null">
        barcode,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="pinyin != null">
        pinyin,
      </if>
      <if test="model != null">
        model,
      </if>
      <if test="spec != null">
        spec,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="typeId != null">
        type_id,
      </if>
      <if test="brandId != null">
        brand_id,
      </if>
      <if test="salePrice != null">
        sale_price,
      </if>
      <if test="inPrice != null">
        in_price,
      </if>
      <if test="retailPrice != null">
        retail_price,
      </if>
      <if test="vipPrice != null">
        vip_price,
      </if>
      <if test="deliveryPrice != null">
        delivery_price,
      </if>
      <if test="inTaxRate != null">
        in_tax_rate,
      </if>
      <if test="saleTaxRate != null">
        sale_tax_rate,
      </if>
      <if test="safetyQuantity != null">
        safety_quantity,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="costType != null">
        cost_type,
      </if>
      <if test="supplierId != null">
        supplier_id,
      </if>
      <if test="isOnSale != null">
        is_on_sale,
      </if>
      <if test="isGift != null">
        is_gift,
      </if>
      <if test="batchFlag != null">
        batch_flag,
      </if>
      <if test="guaranteeDays != null">
        guarantee_days,
      </if>
      <if test="createUserId != null">
        create_user_id,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateUserId != null">
        update_user_id,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
      <if test="organizationId != null">
        organization_id,
      </if>
      <if test="isIntegral != null">
        is_integral,
      </if>
      <if test="giveIntegralRate != null">
        give_integral_rate,
      </if>
      <if test="rankIntegral != null">
        rank_integral,
      </if>
      <if test="resumeIntegral != null">
        resume_integral,
      </if>
      <if test="integralAmount != null">
        integral_amount,
      </if>
      <if test="vipPrice2 != null">
        vip_price2,
      </if>
      <if test="vipPrice3 != null">
        vip_price3,
      </if>
      <if test="vipPrice4 != null">
        vip_price4,
      </if>
      <if test="vipPrice5 != null">
        vip_price5,
      </if>
      <if test="authType != null">
        auth_type,
      </if>
      <if test="applyDesc != null">
        apply_desc,
      </if>
      <if test="auditStatus != null">
        audit_status,
      </if>
      <if test="auditDate != null">
        audit_date,
      </if>
      <if test="auditUserId != null">
        audit_user_id,
      </if>
      <if test="auditDesc != null">
        audit_desc,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="code != null">
        #{code},
      </if>
      <if test="barcode != null">
        #{barcode},
      </if>
      <if test="name != null">
        #{name},
      </if>
      <if test="pinyin != null">
        #{pinyin},
      </if>
      <if test="model != null">
        #{model},
      </if>
      <if test="spec != null">
        #{spec},
      </if>
      <if test="unitId != null">
        #{unitId},
      </if>
      <if test="typeId != null">
        #{typeId},
      </if>
      <if test="brandId != null">
        #{brandId},
      </if>
      <if test="salePrice != null">
        #{salePrice},
      </if>
      <if test="inPrice != null">
        #{inPrice},
      </if>
      <if test="retailPrice != null">
        #{retailPrice},
      </if>
      <if test="vipPrice != null">
        #{vipPrice},
      </if>
      <if test="deliveryPrice != null">
        #{deliveryPrice},
      </if>
      <if test="inTaxRate != null">
        #{inTaxRate},
      </if>
      <if test="saleTaxRate != null">
        #{saleTaxRate},
      </if>
      <if test="safetyQuantity != null">
        #{safetyQuantity},
      </if>
      <if test="description != null">
        #{description},
      </if>
      <if test="costType != null">
        #{costType},
      </if>
      <if test="supplierId != null">
        #{supplierId},
      </if>
      <if test="isOnSale != null">
        #{isOnSale},
      </if>
      <if test="isGift != null">
        #{isGift},
      </if>
      <if test="batchFlag != null">
        #{batchFlag},
      </if>
      <if test="guaranteeDays != null">
        #{guaranteeDays},
      </if>
      <if test="createUserId != null">
        #{createUserId},
      </if>
      <if test="createDate != null">
        #{createDate},
      </if>
      <if test="updateUserId != null">
        #{updateUserId},
      </if>
      <if test="updateDate != null">
        #{updateDate},
      </if>
      <if test="organizationId != null">
        #{organizationId},
      </if>
      <if test="isIntegral != null">
        #{isIntegral},
      </if>
      <if test="giveIntegralRate != null">
        #{giveIntegralRate},
      </if>
      <if test="rankIntegral != null">
        #{rankIntegral},
      </if>
      <if test="resumeIntegral != null">
        #{resumeIntegral},
      </if>
      <if test="integralAmount != null">
        #{integralAmount},
      </if>
      <if test="vipPrice2 != null">
        #{vipPrice2},
      </if>
      <if test="vipPrice3 != null">
        #{vipPrice3},
      </if>
      <if test="vipPrice4 != null">
        #{vipPrice4},
      </if>
      <if test="vipPrice5 != null">
        #{vipPrice5},
      </if>
      <if test="authType != null">
        #{authType},
      </if>
      <if test="applyDesc != null">
        #{applyDesc},
      </if>
      <if test="auditStatus != null">
        #{auditStatus},
      </if>
      <if test="auditDate != null">
        #{auditDate},
      </if>
      <if test="auditUserId != null">
        #{auditUserId},
      </if>
      <if test="auditDesc != null">
        #{auditDesc},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.sales.model.business.DrpMaterial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_drp_material
    <set>
      <if test="id != null">
      	id = #{id},
      </if>
      <if test="code != null">
      	code = #{code},
      </if>
      <if test="barcode != null">
      	barcode = #{barcode},
      </if>
      <if test="name != null">
      	name = #{name},
      </if>
      <if test="pinyin != null">
      	pinyin = #{pinyin},
      </if>
      <if test="model != null">
      	model = #{model},
      </if>
      <if test="spec != null">
      	spec = #{spec},
      </if>
      <if test="unitId != null">
      	unit_id = #{unitId},
      </if>
      <if test="typeId != null">
      	type_id = #{typeId},
      </if>
      <if test="brandId != null">
      	brand_id = #{brandId},
      </if>
      <if test="salePrice != null">
      	sale_price = #{salePrice},
      </if>
      <if test="inPrice != null">
      	in_price = #{inPrice},
      </if>
      <if test="retailPrice != null">
      	retail_price = #{retailPrice},
      </if>
      <if test="vipPrice != null">
      	vip_price = #{vipPrice},
      </if>
      <if test="deliveryPrice != null">
      	delivery_price = #{deliveryPrice},
      </if>
      <if test="inTaxRate != null">
      	in_tax_rate = #{inTaxRate},
      </if>
      <if test="saleTaxRate != null">
      	sale_tax_rate = #{saleTaxRate},
      </if>
      <if test="safetyQuantity != null">
      	safety_quantity = #{safetyQuantity},
      </if>
      <if test="description != null">
      	description = #{description},
      </if>
      <if test="costType != null">
      	cost_type = #{costType},
      </if>
      <if test="supplierId != null">
      	supplier_id = #{supplierId},
      </if>
      <if test="isOnSale != null">
      	is_on_sale = #{isOnSale},
      </if>
      <if test="isGift != null">
      	is_gift = #{isGift},
      </if>
      <if test="batchFlag != null">
      	batch_flag = #{batchFlag},
      </if>
      <if test="guaranteeDays != null">
      	guarantee_days = #{guaranteeDays},
      </if>
      <if test="createUserId != null">
      	create_user_id = #{createUserId},
      </if>
      <if test="createDate != null">
      	create_date = #{createDate},
      </if>
      <if test="updateUserId != null">
      	update_user_id = #{updateUserId},
      </if>
      <if test="updateDate != null">
      	update_date = #{updateDate},
      </if>
      <if test="organizationId != null">
      	organization_id = #{organizationId},
      </if>
      <if test="isIntegral != null">
      	is_integral = #{isIntegral},
      </if>
      <if test="giveIntegralRate != null">
      	give_integral_rate = #{giveIntegralRate},
      </if>
      <if test="rankIntegral != null">
      	rank_integral = #{rankIntegral},
      </if>
      <if test="resumeIntegral != null">
      	resume_integral = #{resumeIntegral},
      </if>
      <if test="integralAmount != null">
      	integral_amount = #{integralAmount},
      </if>
      <if test="vipPrice2 != null">
      	vip_price2 = #{vipPrice2},
      </if>
      <if test="vipPrice3 != null">
      	vip_price3 = #{vipPrice3},
      </if>
      <if test="vipPrice4 != null">
      	vip_price4 = #{vipPrice4},
      </if>
      <if test="vipPrice5 != null">
      	vip_price5 = #{vipPrice5},
      </if>
      <if test="authType != null">
      	auth_type = #{authType},
      </if>
      <if test="applyDesc != null">
      	apply_desc = #{applyDesc},
      </if>
      <if test="auditStatus != null">
      	audit_status = #{auditStatus},
      </if>
      <if test="auditDate != null">
      	audit_date = #{auditDate},
      </if>
      <if test="auditUserId != null">
      	audit_user_id = #{auditUserId},
      </if>
      <if test="auditDesc != null">
      	audit_desc = #{auditDesc},
      </if>
    </set>
    where id = #{id}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.sales.model.business.DrpMaterial">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_drp_material
    set 
      id = #{id}, 
      code = #{code}, 
      barcode = #{barcode}, 
      name = #{name}, 
      pinyin = #{pinyin}, 
      model = #{model}, 
      spec = #{spec}, 
      unit_id = #{unitId}, 
      type_id = #{typeId}, 
      brand_id = #{brandId}, 
      sale_price = #{salePrice}, 
      in_price = #{inPrice}, 
      retail_price = #{retailPrice}, 
      vip_price = #{vipPrice}, 
      delivery_price = #{deliveryPrice}, 
      in_tax_rate = #{inTaxRate}, 
      sale_tax_rate = #{saleTaxRate}, 
      safety_quantity = #{safetyQuantity}, 
      description = #{description}, 
      cost_type = #{costType}, 
      supplier_id = #{supplierId}, 
      is_on_sale = #{isOnSale}, 
      is_gift = #{isGift}, 
      batch_flag = #{batchFlag}, 
      guarantee_days = #{guaranteeDays}, 
      update_user_id = #{updateUserId}, 
      update_date = #{updateDate}, 
      organization_id = #{organizationId}, 
      is_integral = #{isIntegral}, 
      give_integral_rate = #{giveIntegralRate}, 
      rank_integral = #{rankIntegral}, 
      resume_integral = #{resumeIntegral}, 
      integral_amount = #{integralAmount}, 
      vip_price2 = #{vipPrice2}, 
      vip_price3 = #{vipPrice3}, 
      vip_price4 = #{vipPrice4}, 
      vip_price5 = #{vipPrice5}, 
      auth_type = #{authType}, 
      apply_desc = #{applyDesc}, 
      audit_status = #{auditStatus}, 
      audit_date = #{auditDate}, 
      audit_user_id = #{auditUserId}, 
      audit_desc = #{auditDesc}
    where id = #{id}
  </update>
  
  <select id="selectList" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		<include refid="Base_From_Tbl" />
		<where>
			
			<if test="model.id != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.id = #{model.id}
				</trim>
			</if>
			
			<if test="model.code != null and model.code != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.code like CONCAT('%','${model.code}','%')
				</trim>
			</if>
			
			<if test="model.barcode != null and model.barcode != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.barcode like CONCAT('%','${model.barcode}','%')
				</trim>
			</if>
			
			<if test="model.name != null and model.name != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.name like CONCAT('%','${model.name}','%')
				</trim>
			</if>
			
			<if test="model.pinyin != null and model.pinyin != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.pinyin like CONCAT('%','${model.pinyin}','%')
				</trim>
			</if>
			
			<if test="model.model != null and model.model != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.model like CONCAT('%','${model.model}','%')
				</trim>
			</if>
			
			<if test="model.spec != null and model.spec != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.spec like CONCAT('%','${model.spec}','%')
				</trim>
			</if>
			
			<if test="model.unitId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.unit_id = #{model.unitId}
				</trim>
			</if>
			
			<if test="model.typeId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.type_id = #{model.typeId}
				</trim>
			</if>
			
			<if test="model.brandId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.brand_id = #{model.brandId}
				</trim>
			</if>
			
			<if test="model.salePrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.sale_price = #{model.salePrice}
				</trim>
			</if>
			
			<if test="model.inPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.in_price = #{model.inPrice}
				</trim>
			</if>
			
			<if test="model.retailPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.retail_price = #{model.retailPrice}
				</trim>
			</if>
			
			<if test="model.vipPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price = #{model.vipPrice}
				</trim>
			</if>
			
			<if test="model.deliveryPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.delivery_price = #{model.deliveryPrice}
				</trim>
			</if>
			
			<if test="model.inTaxRate != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.in_tax_rate = #{model.inTaxRate}
				</trim>
			</if>
			
			<if test="model.saleTaxRate != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.sale_tax_rate = #{model.saleTaxRate}
				</trim>
			</if>
			
			<if test="model.safetyQuantity != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.safety_quantity = #{model.safetyQuantity}
				</trim>
			</if>
			
			<if test="model.description != null and model.description != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.description like CONCAT('%','${model.description}','%')
				</trim>
			</if>
			
			<if test="model.costType != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.cost_type = #{model.costType}
				</trim>
			</if>
			
			<if test="model.supplierId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.supplier_id = #{model.supplierId}
				</trim>
			</if>
			
			<if test="model.isOnSale != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.is_on_sale = #{model.isOnSale}
				</trim>
			</if>
			
			<if test="model.isGift != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.is_gift = #{model.isGift}
				</trim>
			</if>
			
			<if test="model.batchFlag != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.batch_flag = #{model.batchFlag}
				</trim>
			</if>
			
			<if test="model.guaranteeDays != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.guarantee_days = #{model.guaranteeDays}
				</trim>
			</if>
			
			<if test="model.createUserId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.create_user_id = #{model.createUserId}
				</trim>
			</if>
			
			<if test="model.createDate != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.create_date = #{model.createDate}
				</trim>
			</if>
			
			<if test="model.updateUserId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.update_user_id = #{model.updateUserId}
				</trim>
			</if>
			
			<if test="model.updateDate != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.update_date = #{model.updateDate}
				</trim>
			</if>
			
			<if test="model.organizationId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.organization_id = #{model.organizationId}
				</trim>
			</if>
			
			<if test="model.isIntegral != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.is_integral = #{model.isIntegral}
				</trim>
			</if>
			
			<if test="model.giveIntegralRate != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.give_integral_rate = #{model.giveIntegralRate}
				</trim>
			</if>
			
			<if test="model.rankIntegral != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.rank_integral = #{model.rankIntegral}
				</trim>
			</if>
			
			<if test="model.resumeIntegral != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.resume_integral = #{model.resumeIntegral}
				</trim>
			</if>
			
			<if test="model.integralAmount != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.integral_amount = #{model.integralAmount}
				</trim>
			</if>
			
			<if test="model.vipPrice2 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price2 = #{model.vipPrice2}
				</trim>
			</if>
			
			<if test="model.vipPrice3 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price3 = #{model.vipPrice3}
				</trim>
			</if>
			
			<if test="model.vipPrice4 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price4 = #{model.vipPrice4}
				</trim>
			</if>
			
			<if test="model.vipPrice5 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price5 = #{model.vipPrice5}
				</trim>
			</if>
			
			<if test="model.authType != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.auth_type = #{model.authType}
				</trim>
			</if>
			
			<if test="model.applyDesc != null and model.applyDesc != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.apply_desc like CONCAT('%','${model.applyDesc}','%')
				</trim>
			</if>
			
			<if test="model.auditStatus != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.audit_status = #{model.auditStatus}
				</trim>
			</if>
			
			<if test="model.auditDate != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.audit_date = #{model.auditDate}
				</trim>
			</if>
			
			<if test="model.auditUserId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.audit_user_id = #{model.auditUserId}
				</trim>
			</if>
			
			<if test="model.auditDesc != null and model.auditDesc != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.audit_desc like CONCAT('%','${model.auditDesc}','%')
				</trim>
			</if>
		</where>
	</select>
	
</mapper>