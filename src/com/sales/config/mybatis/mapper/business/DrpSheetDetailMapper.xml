<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sales.dao.business.DrpSheetDetailMapper">
  <resultMap id="BaseResultMap" type="com.sales.model.business.DrpSheetDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    
    	<!-- // 主键 -->
    	<id column="id" property="id" />
    	<!-- // 关联单据编号 -->
		<result column="sheet_id" property="sheetId" />
    	<!-- // 商品编号 -->
		<result column="material_id" property="materialId" />
    	<!-- // 数量 -->
		<result column="quantity" property="quantity" />
    	<!-- // 单价 -->
		<result column="price" property="price" />
    	<!-- // 金额 -->
		<result column="amount" property="amount" />
    	<!-- // 计量单位 -->
		<result column="unit_id" property="unitId" />
    	<!-- // 如入库单关联采购单号；入库退货单关联入库单 -->
		<result column="ref_sheet_id" property="refSheetId" />
    	<!-- // 调价单[调后单价]，调拨单[调入单价] -->
		<result column="new_price" property="newPrice" />
    	<!-- // 序列号 -->
		<result column="sequence_id" property="sequenceId" />
    	<!-- // 备注 -->
		<result column="description" property="description" />
    	<!-- // 采购（销售）订单订购数量，在采购（销售）单中使用，盘点差异单单中的库存数量 -->
		<result column="order_quantity" property="orderQuantity" />
    	<!-- // 盘盈单"盘盈数量"，盘亏单"盘亏数量" -->
		<result column="diff_quantity" property="diffQuantity" />
    	<!-- // 调价单“调价金额”，盘盈单"盘盈金额"，盘亏单"盘亏金额" -->
		<result column="diff_amount" property="diffAmount" />
    	<!-- // 有效期（天） -->
		<result column="guarantee_days" property="guaranteeDays" />
    	<!-- // 有效开始日期 -->
		<result column="effective_start_date" property="effectiveStartDate" />
    	<!-- // 有效截止日期 -->
		<result column="effective_end_date" property="effectiveEndDate" />
    	<!-- // 批号 -->
		<result column="batch_no" property="batchNo" />
    	<!-- // 批号 -->
		<result column="batch_id" property="batchId" />
    	<!-- // 批发价 -->
		<result column="sale_price" property="salePrice" />
    	<!-- // 新批发价 -->
		<result column="new_sale_price" property="newSalePrice" />
    	<!-- // 零售价 -->
		<result column="retail_price" property="retailPrice" />
    	<!-- // 新零售价 -->
		<result column="new_retail_price" property="newRetailPrice" />
    	<!-- // 会员价 -->
		<result column="vip_price" property="vipPrice" />
    	<!-- // 新会员价 -->
		<result column="new_vip_price" property="newVipPrice" />
    	<!-- // 会员价2 -->
		<result column="vip_price2" property="vipPrice2" />
    	<!-- // 新会员价2 -->
		<result column="new_vip_price2" property="newVipPrice2" />
    	<!-- // 会员价3 -->
		<result column="vip_price3" property="vipPrice3" />
    	<!-- // 新会员价3 -->
		<result column="new_vip_price3" property="newVipPrice3" />
    	<!-- // 会员价4 -->
		<result column="vip_price4" property="vipPrice4" />
    	<!-- // 新会员价4 -->
		<result column="new_vip_price4" property="newVipPrice4" />
    	<!-- // 会员价5 -->
		<result column="vip_price5" property="vipPrice5" />
    	<!-- // 新会员价5 -->
		<result column="new_vip_price5" property="newVipPrice5" />
    	<!-- // 关联促销活动编号（要货申请单可以关联总部促销活动编号，总部向门店发货时，可以根据要货单关联的促销活动自动计算出给门店的配送价） -->
		<result column="act_id" property="actId" />
    	<!-- // 授权天数（单位：天）（调价授权申请时用到） -->
		<result column="auth_day" property="authDay" />
    	<!-- // 是否积分兑换商品（门店发货时用到，积分兑换商品门店不需要入库，直接存放再商城中） -->
		<result column="is_exchange" property="isExchange" />
    
    <association property="materialIdRef" javaType="com.sales.model.business.DrpMaterial">
    	<id column="material_id" property="id"/>
    	<result column="materialIdRef_id" property="id" />
    	<result column="materialIdRef_name" property="name" />
    </association>
    
    <association property="unitIdRef" javaType="com.sales.model.business.SysUnit">
    	<id column="unit_id" property="id"/>
    	<result column="unitIdRef_id" property="id" />
    	<result column="unitIdRef_name" property="name" />
    </association>
    
    <association property="refSheetIdRef" javaType="com.sales.model.business.DrpSheet">
    	<id column="ref_sheet_id" property="id"/>
    	<result column="refSheetIdRef_id" property="id" />
    	<result column="refSheetIdRef_sheet_no" property="sheetNo" />
    </association>
    
    <association property="batchIdRef" javaType="com.sales.model.business.DrpMatBatch">
    	<id column="batch_id" property="id"/>
    	<result column="batchIdRef_id" property="id" />
    	<result column="batchIdRef_batch_no" property="batchNo" />
    </association>
    
    <association property="actIdRef" javaType="com.sales.model.business.Activity">
    	<id column="act_id" property="id"/>
    	<result column="actIdRef_id" property="id" />
    	<result column="actIdRef_name" property="name" />
    </association>
    
    <association property="isExchangeRef" javaType="com.sales.model.business.SysParameter">
    	<id column="is_exchange" property="id"/>
    	<result column="isExchangeRef_id" property="id" />
    	<result column="isExchangeRef_param_val" property="paramVal" />
    </association>
    
    
  </resultMap>
  
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    
    	o.id, 
    	o.sheet_id, 
    	materialIdRef.id AS materialIdRef_id, 
		materialIdRef.name as materialIdRef_name,
    	o.material_id, 
    	o.quantity, 
    	o.price, 
    	o.amount, 
    	unitIdRef.id AS unitIdRef_id, 
		unitIdRef.name as unitIdRef_name,
    	o.unit_id, 
    	refSheetIdRef.id AS refSheetIdRef_id, 
		refSheetIdRef.sheet_no as refSheetIdRef_sheet_no,
    	o.ref_sheet_id, 
    	o.new_price, 
    	o.sequence_id, 
    	o.description, 
    	o.order_quantity, 
    	o.diff_quantity, 
    	o.diff_amount, 
    	o.guarantee_days, 
    	o.effective_start_date, 
    	o.effective_end_date, 
    	o.batch_no, 
    	batchIdRef.id AS batchIdRef_id, 
		batchIdRef.batch_no as batchIdRef_batch_no,
    	o.batch_id, 
    	o.sale_price, 
    	o.new_sale_price, 
    	o.retail_price, 
    	o.new_retail_price, 
    	o.vip_price, 
    	o.new_vip_price, 
    	o.vip_price2, 
    	o.new_vip_price2, 
    	o.vip_price3, 
    	o.new_vip_price3, 
    	o.vip_price4, 
    	o.new_vip_price4, 
    	o.vip_price5, 
    	o.new_vip_price5, 
    	actIdRef.id AS actIdRef_id, 
		actIdRef.name as actIdRef_name,
    	o.act_id, 
    	o.auth_day, 
    	isExchangeRef.id AS isExchangeRef_id, 
		isExchangeRef.param_val as isExchangeRef_param_val,
    	o.is_exchange
	
  </sql>
  
  <sql id="Base_From_Tbl">
  	from t_drp_sheet_detail o
	    LEFT JOIN t_drp_material materialIdRef ON (o.material_id = materialIdRef.id)
	    LEFT JOIN t_sys_unit unitIdRef ON (o.unit_id = unitIdRef.id)
	    LEFT JOIN t_drp_sheet refSheetIdRef ON (o.ref_sheet_id = refSheetIdRef.id)
	    LEFT JOIN t_drp_mat_batch batchIdRef ON (o.batch_id = batchIdRef.id)
	    LEFT JOIN t_activity actIdRef ON (o.act_id = actIdRef.id)
	    LEFT JOIN t_sys_parameter isExchangeRef ON (o.is_exchange = isExchangeRef.id)
  </sql>
  
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    <include refid="Base_From_Tbl" />
    where o.id = #{id}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from t_drp_sheet_detail
    where id = #{id}
  </delete>
  
  <insert id="insert" parameterType="com.sales.model.business.DrpSheetDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_drp_sheet_detail (
      id, 
      sheet_id, 
      material_id, 
      quantity, 
      price, 
      amount, 
      unit_id, 
      ref_sheet_id, 
      new_price, 
      sequence_id, 
      description, 
      order_quantity, 
      diff_quantity, 
      diff_amount, 
      guarantee_days, 
      effective_start_date, 
      effective_end_date, 
      batch_no, 
      batch_id, 
      sale_price, 
      new_sale_price, 
      retail_price, 
      new_retail_price, 
      vip_price, 
      new_vip_price, 
      vip_price2, 
      new_vip_price2, 
      vip_price3, 
      new_vip_price3, 
      vip_price4, 
      new_vip_price4, 
      vip_price5, 
      new_vip_price5, 
      act_id, 
      auth_day, 
      is_exchange
      )
    values (
      #{id}, 
      #{sheetId}, 
      #{materialId}, 
      #{quantity}, 
      #{price}, 
      #{amount}, 
      #{unitId}, 
      #{refSheetId}, 
      #{newPrice}, 
      #{sequenceId}, 
      #{description}, 
      #{orderQuantity}, 
      #{diffQuantity}, 
      #{diffAmount}, 
      #{guaranteeDays}, 
      #{effectiveStartDate}, 
      #{effectiveEndDate}, 
      #{batchNo}, 
      #{batchId}, 
      #{salePrice}, 
      #{newSalePrice}, 
      #{retailPrice}, 
      #{newRetailPrice}, 
      #{vipPrice}, 
      #{newVipPrice}, 
      #{vipPrice2}, 
      #{newVipPrice2}, 
      #{vipPrice3}, 
      #{newVipPrice3}, 
      #{vipPrice4}, 
      #{newVipPrice4}, 
      #{vipPrice5}, 
      #{newVipPrice5}, 
      #{actId}, 
      #{authDay}, 
      #{isExchange}
      )
  </insert>
  
  <insert id="insertSelective" parameterType="com.sales.model.business.DrpSheetDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into t_drp_sheet_detail
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="sheetId != null">
        sheet_id,
      </if>
      <if test="materialId != null">
        material_id,
      </if>
      <if test="quantity != null">
        quantity,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="amount != null">
        amount,
      </if>
      <if test="unitId != null">
        unit_id,
      </if>
      <if test="refSheetId != null">
        ref_sheet_id,
      </if>
      <if test="newPrice != null">
        new_price,
      </if>
      <if test="sequenceId != null">
        sequence_id,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="orderQuantity != null">
        order_quantity,
      </if>
      <if test="diffQuantity != null">
        diff_quantity,
      </if>
      <if test="diffAmount != null">
        diff_amount,
      </if>
      <if test="guaranteeDays != null">
        guarantee_days,
      </if>
      <if test="effectiveStartDate != null">
        effective_start_date,
      </if>
      <if test="effectiveEndDate != null">
        effective_end_date,
      </if>
      <if test="batchNo != null">
        batch_no,
      </if>
      <if test="batchId != null">
        batch_id,
      </if>
      <if test="salePrice != null">
        sale_price,
      </if>
      <if test="newSalePrice != null">
        new_sale_price,
      </if>
      <if test="retailPrice != null">
        retail_price,
      </if>
      <if test="newRetailPrice != null">
        new_retail_price,
      </if>
      <if test="vipPrice != null">
        vip_price,
      </if>
      <if test="newVipPrice != null">
        new_vip_price,
      </if>
      <if test="vipPrice2 != null">
        vip_price2,
      </if>
      <if test="newVipPrice2 != null">
        new_vip_price2,
      </if>
      <if test="vipPrice3 != null">
        vip_price3,
      </if>
      <if test="newVipPrice3 != null">
        new_vip_price3,
      </if>
      <if test="vipPrice4 != null">
        vip_price4,
      </if>
      <if test="newVipPrice4 != null">
        new_vip_price4,
      </if>
      <if test="vipPrice5 != null">
        vip_price5,
      </if>
      <if test="newVipPrice5 != null">
        new_vip_price5,
      </if>
      <if test="actId != null">
        act_id,
      </if>
      <if test="authDay != null">
        auth_day,
      </if>
      <if test="isExchange != null">
        is_exchange,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id},
      </if>
      <if test="sheetId != null">
        #{sheetId},
      </if>
      <if test="materialId != null">
        #{materialId},
      </if>
      <if test="quantity != null">
        #{quantity},
      </if>
      <if test="price != null">
        #{price},
      </if>
      <if test="amount != null">
        #{amount},
      </if>
      <if test="unitId != null">
        #{unitId},
      </if>
      <if test="refSheetId != null">
        #{refSheetId},
      </if>
      <if test="newPrice != null">
        #{newPrice},
      </if>
      <if test="sequenceId != null">
        #{sequenceId},
      </if>
      <if test="description != null">
        #{description},
      </if>
      <if test="orderQuantity != null">
        #{orderQuantity},
      </if>
      <if test="diffQuantity != null">
        #{diffQuantity},
      </if>
      <if test="diffAmount != null">
        #{diffAmount},
      </if>
      <if test="guaranteeDays != null">
        #{guaranteeDays},
      </if>
      <if test="effectiveStartDate != null">
        #{effectiveStartDate},
      </if>
      <if test="effectiveEndDate != null">
        #{effectiveEndDate},
      </if>
      <if test="batchNo != null">
        #{batchNo},
      </if>
      <if test="batchId != null">
        #{batchId},
      </if>
      <if test="salePrice != null">
        #{salePrice},
      </if>
      <if test="newSalePrice != null">
        #{newSalePrice},
      </if>
      <if test="retailPrice != null">
        #{retailPrice},
      </if>
      <if test="newRetailPrice != null">
        #{newRetailPrice},
      </if>
      <if test="vipPrice != null">
        #{vipPrice},
      </if>
      <if test="newVipPrice != null">
        #{newVipPrice},
      </if>
      <if test="vipPrice2 != null">
        #{vipPrice2},
      </if>
      <if test="newVipPrice2 != null">
        #{newVipPrice2},
      </if>
      <if test="vipPrice3 != null">
        #{vipPrice3},
      </if>
      <if test="newVipPrice3 != null">
        #{newVipPrice3},
      </if>
      <if test="vipPrice4 != null">
        #{vipPrice4},
      </if>
      <if test="newVipPrice4 != null">
        #{newVipPrice4},
      </if>
      <if test="vipPrice5 != null">
        #{vipPrice5},
      </if>
      <if test="newVipPrice5 != null">
        #{newVipPrice5},
      </if>
      <if test="actId != null">
        #{actId},
      </if>
      <if test="authDay != null">
        #{authDay},
      </if>
      <if test="isExchange != null">
        #{isExchange},
      </if>
    </trim>
  </insert>
  
  <update id="updateByPrimaryKeySelective" parameterType="com.sales.model.business.DrpSheetDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_drp_sheet_detail
    <set>
      <if test="id != null">
      	id = #{id},
      </if>
      <if test="sheetId != null">
      	sheet_id = #{sheetId},
      </if>
      <if test="materialId != null">
      	material_id = #{materialId},
      </if>
      <if test="quantity != null">
      	quantity = #{quantity},
      </if>
      <if test="price != null">
      	price = #{price},
      </if>
      <if test="amount != null">
      	amount = #{amount},
      </if>
      <if test="unitId != null">
      	unit_id = #{unitId},
      </if>
      <if test="refSheetId != null">
      	ref_sheet_id = #{refSheetId},
      </if>
      <if test="newPrice != null">
      	new_price = #{newPrice},
      </if>
      <if test="sequenceId != null">
      	sequence_id = #{sequenceId},
      </if>
      <if test="description != null">
      	description = #{description},
      </if>
      <if test="orderQuantity != null">
      	order_quantity = #{orderQuantity},
      </if>
      <if test="diffQuantity != null">
      	diff_quantity = #{diffQuantity},
      </if>
      <if test="diffAmount != null">
      	diff_amount = #{diffAmount},
      </if>
      <if test="guaranteeDays != null">
      	guarantee_days = #{guaranteeDays},
      </if>
      <if test="effectiveStartDate != null">
      	effective_start_date = #{effectiveStartDate},
      </if>
      <if test="effectiveEndDate != null">
      	effective_end_date = #{effectiveEndDate},
      </if>
      <if test="batchNo != null">
      	batch_no = #{batchNo},
      </if>
      <if test="batchId != null">
      	batch_id = #{batchId},
      </if>
      <if test="salePrice != null">
      	sale_price = #{salePrice},
      </if>
      <if test="newSalePrice != null">
      	new_sale_price = #{newSalePrice},
      </if>
      <if test="retailPrice != null">
      	retail_price = #{retailPrice},
      </if>
      <if test="newRetailPrice != null">
      	new_retail_price = #{newRetailPrice},
      </if>
      <if test="vipPrice != null">
      	vip_price = #{vipPrice},
      </if>
      <if test="newVipPrice != null">
      	new_vip_price = #{newVipPrice},
      </if>
      <if test="vipPrice2 != null">
      	vip_price2 = #{vipPrice2},
      </if>
      <if test="newVipPrice2 != null">
      	new_vip_price2 = #{newVipPrice2},
      </if>
      <if test="vipPrice3 != null">
      	vip_price3 = #{vipPrice3},
      </if>
      <if test="newVipPrice3 != null">
      	new_vip_price3 = #{newVipPrice3},
      </if>
      <if test="vipPrice4 != null">
      	vip_price4 = #{vipPrice4},
      </if>
      <if test="newVipPrice4 != null">
      	new_vip_price4 = #{newVipPrice4},
      </if>
      <if test="vipPrice5 != null">
      	vip_price5 = #{vipPrice5},
      </if>
      <if test="newVipPrice5 != null">
      	new_vip_price5 = #{newVipPrice5},
      </if>
      <if test="actId != null">
      	act_id = #{actId},
      </if>
      <if test="authDay != null">
      	auth_day = #{authDay},
      </if>
      <if test="isExchange != null">
      	is_exchange = #{isExchange},
      </if>
    </set>
    where id = #{id}
  </update>
  
  <update id="updateByPrimaryKey" parameterType="com.sales.model.business.DrpSheetDetail">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update t_drp_sheet_detail
    set 
      id = #{id}, 
      sheet_id = #{sheetId}, 
      material_id = #{materialId}, 
      quantity = #{quantity}, 
      price = #{price}, 
      amount = #{amount}, 
      unit_id = #{unitId}, 
      ref_sheet_id = #{refSheetId}, 
      new_price = #{newPrice}, 
      sequence_id = #{sequenceId}, 
      description = #{description}, 
      order_quantity = #{orderQuantity}, 
      diff_quantity = #{diffQuantity}, 
      diff_amount = #{diffAmount}, 
      guarantee_days = #{guaranteeDays}, 
      effective_start_date = #{effectiveStartDate}, 
      effective_end_date = #{effectiveEndDate}, 
      batch_no = #{batchNo}, 
      batch_id = #{batchId}, 
      sale_price = #{salePrice}, 
      new_sale_price = #{newSalePrice}, 
      retail_price = #{retailPrice}, 
      new_retail_price = #{newRetailPrice}, 
      vip_price = #{vipPrice}, 
      new_vip_price = #{newVipPrice}, 
      vip_price2 = #{vipPrice2}, 
      new_vip_price2 = #{newVipPrice2}, 
      vip_price3 = #{vipPrice3}, 
      new_vip_price3 = #{newVipPrice3}, 
      vip_price4 = #{vipPrice4}, 
      new_vip_price4 = #{newVipPrice4}, 
      vip_price5 = #{vipPrice5}, 
      new_vip_price5 = #{newVipPrice5}, 
      act_id = #{actId}, 
      auth_day = #{authDay}, 
      is_exchange = #{isExchange}
    where id = #{id}
  </update>
  
  <select id="selectList" resultMap="BaseResultMap"
		parameterType="java.util.Map">
		<!-- WARNING - @mbggenerated This element is automatically generated by 
			MyBatis Generator, do not modify. -->
		select
		<include refid="Base_Column_List" />
		<include refid="Base_From_Tbl" />
		<where>
			
			<if test="model.id != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.id = #{model.id}
				</trim>
			</if>
			
			<if test="model.sheetId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.sheet_id = #{model.sheetId}
				</trim>
			</if>
			
			<if test="model.materialId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.material_id = #{model.materialId}
				</trim>
			</if>
			
			<if test="model.quantity != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.quantity = #{model.quantity}
				</trim>
			</if>
			
			<if test="model.price != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.price = #{model.price}
				</trim>
			</if>
			
			<if test="model.amount != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.amount = #{model.amount}
				</trim>
			</if>
			
			<if test="model.unitId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.unit_id = #{model.unitId}
				</trim>
			</if>
			
			<if test="model.refSheetId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.ref_sheet_id = #{model.refSheetId}
				</trim>
			</if>
			
			<if test="model.newPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.new_price = #{model.newPrice}
				</trim>
			</if>
			
			<if test="model.sequenceId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.sequence_id = #{model.sequenceId}
				</trim>
			</if>
			
			<if test="model.description != null and model.description != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.description like CONCAT('%','${model.description}','%')
				</trim>
			</if>
			
			<if test="model.orderQuantity != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.order_quantity = #{model.orderQuantity}
				</trim>
			</if>
			
			<if test="model.diffQuantity != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.diff_quantity = #{model.diffQuantity}
				</trim>
			</if>
			
			<if test="model.diffAmount != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.diff_amount = #{model.diffAmount}
				</trim>
			</if>
			
			<if test="model.guaranteeDays != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.guarantee_days = #{model.guaranteeDays}
				</trim>
			</if>
			
			<if test="model.effectiveStartDate != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.effective_start_date = #{model.effectiveStartDate}
				</trim>
			</if>
			
			<if test="model.effectiveEndDate != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.effective_end_date = #{model.effectiveEndDate}
				</trim>
			</if>
			
			<if test="model.batchNo != null and model.batchNo != ''">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.batch_no like CONCAT('%','${model.batchNo}','%')
				</trim>
			</if>
			
			<if test="model.batchId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.batch_id = #{model.batchId}
				</trim>
			</if>
			
			<if test="model.salePrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.sale_price = #{model.salePrice}
				</trim>
			</if>
			
			<if test="model.newSalePrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.new_sale_price = #{model.newSalePrice}
				</trim>
			</if>
			
			<if test="model.retailPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.retail_price = #{model.retailPrice}
				</trim>
			</if>
			
			<if test="model.newRetailPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.new_retail_price = #{model.newRetailPrice}
				</trim>
			</if>
			
			<if test="model.vipPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price = #{model.vipPrice}
				</trim>
			</if>
			
			<if test="model.newVipPrice != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.new_vip_price = #{model.newVipPrice}
				</trim>
			</if>
			
			<if test="model.vipPrice2 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price2 = #{model.vipPrice2}
				</trim>
			</if>
			
			<if test="model.newVipPrice2 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.new_vip_price2 = #{model.newVipPrice2}
				</trim>
			</if>
			
			<if test="model.vipPrice3 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price3 = #{model.vipPrice3}
				</trim>
			</if>
			
			<if test="model.newVipPrice3 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.new_vip_price3 = #{model.newVipPrice3}
				</trim>
			</if>
			
			<if test="model.vipPrice4 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price4 = #{model.vipPrice4}
				</trim>
			</if>
			
			<if test="model.newVipPrice4 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.new_vip_price4 = #{model.newVipPrice4}
				</trim>
			</if>
			
			<if test="model.vipPrice5 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.vip_price5 = #{model.vipPrice5}
				</trim>
			</if>
			
			<if test="model.newVipPrice5 != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.new_vip_price5 = #{model.newVipPrice5}
				</trim>
			</if>
			
			<if test="model.actId != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.act_id = #{model.actId}
				</trim>
			</if>
			
			<if test="model.authDay != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.auth_day = #{model.authDay}
				</trim>
			</if>
			
			<if test="model.isExchange != null">
				<trim prefix="AND (" suffix=")" suffixOverrides="AND | OR">
					o.is_exchange = #{model.isExchange}
				</trim>
			</if>
		</where>
	</select>
	
</mapper>